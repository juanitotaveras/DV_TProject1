ggplot(df, aes(SEX, FARE, color=AGE)) +
geom_boxplot() + geom_jitter()
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs347_professor', PASS='orcl_professor', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
ggplot(df, aes(SEX, FARE, color=AGE)) +
geom_boxplot() + geom_jitter()
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null and age <10"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs347_professor', PASS='orcl_professor', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
ggplot(df, aes(SEX, FARE, color=AGE)) +
geom_boxplot() + geom_jitter()
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null and fare>100"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs347_professor', PASS='orcl_professor', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
ggplot(df, aes(SEX, AGE, color=FARE)) +
geom_boxplot() + geom_jitter()
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) +
theme(
axis.title.x=element_text(color="forestgreen", vjust=0.35),
axis.title.y=element_text(color="cadetblue", vjust=0.35)
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) +
theme(
axis.title.x=element_text(color="forestgreen", vjust=0.35),
axis.title.y=element_text(color="cadetblue", vjust=0.35)
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA))
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA))) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) +
theme(
axis.title.x=element_text(color="forestgreen", vjust=0.35),
axis.title.y=element_text(color="cadetblue", vjust=0.35)
)
require(extrafont)
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
#facet_wrap(~cut) +
facet_grid(clarity~cut) +
labs(title='Diamonds') +
labs(x="Cut", y=paste("Cut", "Numbers")) +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) +
theme(
axis.title.x=element_text(color="forestgreen", vjust=0.35),
axis.title.y=element_text(color="cadetblue", vjust=0.35)
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
)
require(tidyr)
require(dplyr)
tbl_df(diamonds)
View(diamonds)
source('~/DataVisualization/DrCannata/RWorkshop/05 Data Wrangling/Data Wrangling.R')
source('~/DataVisualization/DrCannata/RWorkshop/05 Data Wrangling/Data Wrangling.R')
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
# select
select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
diamonds %>% select(cut, clarity) %>% tbl_df
diamonds %>% select(., cut, clarity) %>% tbl_df
diamonds %>% select(color:price) %>% tbl_df # Equivalent SQL: none
View(diamonds)
diamonds %>% select(-cut, -clarity) %>% tbl_df # Equivalent SQL: none
x <- diamonds %>% select(cut, clarity) %>% tbl_df
x
diamonds %>% rename(tbl= table) %>% tbl_df # Equivalent: select tbl as "table" from diamonds;
diamonds %>% rename(tbl= table) %>% tbl_df # Equivalent: select tbl as "table" from diamonds;
diamonds %>% arrange(desc(carat)) %>% tbl_df # Equivalent SQL:select * from diamonds order by carat desc;
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(sum = x+y+z) %>% tbl_df # Equivalent: select cut, clarity, x+y+z as sum from diamonds where ((cut = 'Good' or cut = 'Fair') and clarity = 'VS1') or cut is null
pmin(c(1:5), (5:1)) # Pairwise min
pmax(c(1:5), (5:1)) # Pairwise max
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
fdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from premature"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("jsonlite")
require("RCurl")
require("dplyr")
require("tidyr")
require("ggplot2")
require("extrafont")
# Change the USER and PASS below to be your UTEid
fdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from premature"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
fdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from premature"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
sdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from infected"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
source('~/DataVisualization/DV_RProject3/02 Data Wrangling/Blending_P1.R')
fdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from premature"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
sdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from infected"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
tdf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from trauma"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
names(fdf);names(sdf);names(tdf)
inner_join(fdf, sdf, by = c("COUNTRY","YEAR") %>% tbl_df # This gives an error - cannot join on columns 'DIAMOND_ID' x 'DIAMOND_ID': index out of bounds
colnames(ddf) <- toupper(names(ddf)); dsdf <- inner_join(ddf, sdf, by = "DIAMOND_ID"); inner_join(dsdf, rdf, by = "RETAILER_ID") %>% tbl_df
names(fdf);names(sdf);names(tdf)
inner_join(fdf, sdf, by = c("COUNTRY","YEAR") %>% tbl_df # This gives an error - cannot join on columns 'DIAMOND_ID' x 'DIAMOND_ID': index out of bounds
inner_join(fdf, sdf, by = c("COUNTRY","YEAR") %>% tbl_df
colnames(ddf) <- toupper(names(ddf)); dsdf <- inner_join(ddf, sdf, by = "DIAMOND_ID"); inner_join(dsdf, rdf, by = "RETAILER_ID") %>% tbl_df
names(fdf);names(sdf);names(tdf)
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = "COUNTRY"); inner_join(fsdf, tdf, by = "YEAR") %>% tbl_df
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = "COUNTRY")
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = "COUNTRY")%>%View
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","Year")%>%View
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","Year")%>%View
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View
colnames(fdf) <- toupper(names(sdf)); fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View;
colnames(fdf) <- toupper(names(sdf))
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View
colnames(fdf) <- toupper(names(sdf))
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View
colnames(fdf) <- toupper(names(sdf))
fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View
colnames(fdf) <- toupper(names(sdf))
fsdf <- inner_join(fdf, sdf, by = c("COUNTRY","YEAR")%>%View
colnames(fdf) <- toupper(names(sdf))
colnames(fdf) <- toupper(names(sdf))
dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR")
dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR")
dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR") %>% tbl_df
dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR") %>% tbl_df
dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR")) %>% tbl_df
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR");
inner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% tbl_df
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR"))
tfsdf <- dplyrinner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% tbl_df
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR"))
tfsdf <- dplyr::inner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% tbl_df
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR"))
tfsdf <- dplyr::inner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% tbl_df
colnames(fdf) <- toupper(names(sdf))
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR"))
tfsdf <- dplyr::inner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% View
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR"))
tfsdf <- dplyr::inner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% tbl_df
fsdf <- dplyr::inner_join(fdf, sdf, by = c("COUNTRY","YEAR"))
tfsdf <- dplyr::inner_join(fsdf, tdf, by = c("COUNTRY", "YEAR")) %>% tbl_df
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
require("jsonlite")
require("RCurl")
require("dplyr")
require("tidyr")
require("ggplot2")
require("extrafont")
# Change the USER and PASS below to be your UTEid
premature_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from premature"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
infections_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from infected"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
trauma_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from trauma"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
names(premature_df);names(infections_df);names(trauma_df)
join_df <- inner_join(trauma_df, premature_df, by = c("COUNTRY","YEAR")) %>% arrange(COUNTRY, YEAR)
View(join_df)
summary(join_df)
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 10000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=COUNTRY, y=Percent_trauma, color=Percent_prem)) + scale_x_discrete() + scale_y_continuous() + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
BABIES
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=YEAR, y=Percent_trauma, color=Percent_prem)) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(YEAR==2013) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + scale_x_discrete() + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD IN 2013")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=YEAR, y=Percent_trauma, color=Percent_prem)) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=YEAR, y=Percent_trauma, color=Percent_prem)) + geom_point() + scale_x_discret() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=YEAR, y=Percent_trauma, color=Percent_prem)) + geom_point() + scale_x_discrete() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + + facet_wrap(YEAR~COUNTRY) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + + facet_wrap(YEAR~COUNTRY, labeller=label_both) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + + facet_grid(YEAR~COUNTRY, labeller=label_both) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + facet_grid(YEAR~COUNTRY, labeller=label_both) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + facet_grid(YEAR~COUNTRY, labeller=label_both) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + facet_grid(YEAR~COUNTRY, labeller=label_both) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter((TRAUMA_TOTAL+PREM_TOTAL > 50000) && (YEAR==2012 || YEAR=2013)) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR))  + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR, labeller=label_both) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(COUNTRY="China") %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(COUNTRY=="China") %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 50000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 100000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 100000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(COUNTRY~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 100000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 80000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 60000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 50000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 30000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
require("jsonlite")
require("RCurl")
require("dplyr")
require("tidyr")
require("ggplot2")
require("extrafont")
# Change the USER and PASS below to be your UTEid
premature_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from premature"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
infections_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from infected"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
trauma_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from trauma"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_kdk745', PASS='orcl_kdk745', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
names(premature_df);names(infections_df);names(trauma_df)
join_df <- inner_join(trauma_df, premature_df, by = c("COUNTRY","YEAR")) %>% arrange(COUNTRY, YEAR)
View(join_df)
summary(join_df)
summary(join_df)
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 30000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 25000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 20000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 19000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(YEAR==2013) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD IN 2013")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 19000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 19000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 19000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=COUNTRY)) + geom_point() + facet_wrap(~YEAR) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
join_df %>% mutate(Percent_trauma = TRAUMA_0_TO_27_DAYS / TRAUMA_TOTAL, Percent_prem = PREM_0_TO_27_DAYS / PREM_TOTAL) %>% filter(TRAUMA_TOTAL+PREM_TOTAL > 19000) %>% ggplot(aes(x=Percent_prem, y=Percent_trauma, color=YEAR)) + geom_point() + facet_wrap(~COUNTRY) + labs(x="PERCENTAGE OF PREMATURITY-CAUSED DEATHS", y="PERCENTAGE OF TRAUMA-CAUSED DEATHS") + labs(title="DEATHS IN BABIES 0 TO 27 DAYS OLD")
source('~/DataVisualization/DrCannata/RWorkshop/08 Crosstabs/Crosstabs.R')
source('~/DataVisualization/DrCannata/RWorkshop/08 Crosstabs/Crosstabs.R')
source('~/DataVisualization/DV_TProject1/ETL.R')
setwd("~/DataVisualization/DV_TProject1")
source('~/DataVisualization/DV_TProject1/ETL.R')
setwd("~/DataVisualization/DV_TProject1")
file_path <- "Gallups_Most_Important_Problem_reformatted.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
#names(df) <- gsub("\\.+", "_", names(df))
View(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Year", "Percentage", "MajorTopic", "Congress")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
#write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
